pwd													   (mevcut konumunu gösterir)
ls 												       (bulunduğun konum içeriğini gösterir)
ls -la                                                 (gizli dosyalarıda gösterir)
mkdir                                                  (make directory)**klasör oluşturur
rmdir [kalsör adı]                                     (klasör siler)
touch                                                  (dosya oluşturur)
touch .gitignore
rm 													   (dosya siler **exp: rm not.txt)
rm -rf												   (klasör siler **exp: rm -rf yeniklasör)
git                                                    (yardım dökümasyonunun gösterir)
git version                                            (git versiyonunu gösterir)
cd 													   (ileri hedef dizine gider)
cd ..                                                  (geri dizine gider)
git config user.name                                   (kullanıcı adı yazdırılır)
git config --global user.name [user name]              (global olarak kullanıcı adımızı kaydederiz)
git config --global user.email [email]                 (global email imizi kayıt ederiz)
git config --list									   (tüm ayarları listeler)
git clone [https....]                                  ("GitHub adresinden local machine' e indirilir")
git status                                             ("değişikliklerin git durumunu sorgular")
git status --short                                     (değişikliklerin git durumunu daha kompakt bir gösterimde sorgular)
git add [metin.txt]                                    (sadece bir dosyayı git takibe alır)
git add [metin.txt] [metin2.txt]                       (birden fazla dosya için)
git add .                                              ("bütün değişiklikleri git takibe alır")
git commit -m "..." -m "..."                           ("git e işler -m "" -m "" tırnak içine mesaj yazılır  ikinci -m açıklama kısmı içindir")
git commit -am  "message..."                           (hem git için add yapar hemde işlerken mesaj yazılır. yanlızca değiştirilen dosyalar için)
git commit -a                                          (değişiklikleri direkt işler)
git pull                                               
cd                                                     ("en ilk sekmeye döner")
cd ..                                                  ("mevcut sekmeden geri döner")
git init                                               (".git initialization başlatır")
git remote add [origin] [remote VCS link]              ([origin] = VCS variable name "bu pc de olmayan uzak biryerdeki repository e referan verir")
git remote -v                                          ("bu depoya bağlı uzak depoları gösterir")
git push -u [origin = VCS variable] [master = branch]  (-u gelecekte origin master yazmamak için origin master i default olarak ayarlar sadece git push yazmak yeterlidir)
git push                                               ("yerel değişiklikleri repository imize işler örenek: GitHub")
git branch                                             ([*master] "dalları gösterir ' * ' ise şuan çalıştığın bracnh e işaret eder")
git checkout -b [bracnh name]                          (yeni branch açar [bracnh name] oluşturulacak yeni branch in ismi yaılır)
git checkout [bracnh name]                             (branch ler arasında geçiş yapar 'branch name' geçiş yapılmak istenene branch in ismi yazılır)
git merge [bracnh name]                                (dalları birleştirir)
git diff [bracnh name]		                           (yapılan değişiklikleri gösterir)
git branch -d [branch name]                            (branch i siler)
git reset [File name = README.md]				       (işlenen eklemeleri geri alır)
git log 										       (eklenen sürümleri , yapılan işlemleri ters kronolojik olarak gösterir)
git reset [commit number]                              (istenilen commite numarasıyla erişmemeizi sağlar)
git reset --hard [commit number]                       (gitmek istediğimiz commiti defaul yapar)